1) «адать целочисленный массив, состо€щий из элементов 0 и 1. Ќапример: [1, 1, 0, 0, 1, 0, 1, 1, 0, 0]. — помощью цикла
   и услови€ заменить 0 на 1, 1 на 0;
2) «адать пустой целочисленный массив размером 8. — помощью цикла заполнить его значени€ми 0, 3, 6, 9, 12, 15, 18, 21;
3) «адать массив [1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1], пройти по нему циклом, и числа меньшие 6 умножить на 2;
4) —оздать квадратный двумерный целочисленный массив (количество строк и столбцов одинаковое), и с помощью цикла(-ов)
   запомнить его диагональные элементы единицами;
5) ** «адать одномерный массив и найти в нем минимальный и максимальный элементы (без помощи интернета);
6) ** Ќаписать метод, в который передаетс€ не пустой одномерный целочисленный массив, метод должен вернуть true если в
   массиве есть место, в котором сумма левой и правой части массива равны. ѕримеры: checkBalance([1, 1, 1, || 2, 1])
   -> true, checkBalance([2, 1, 1, 2, 1]) -> false, checkBalance([10, || 10]) -> true, граница показана символами ||,
   эти символы в массив не вход€т;
7) **** Ќаписать метод, которому на вход подаетс€ одномерный массив и число n (может быть положительным или отрицательным),
   при этом метод должен сместить все элементы массива на n позиций. ƒл€ усложнени€ задачи нельз€ пользоватьс€
   вспомогательными массивами.